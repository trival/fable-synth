/* Generated by the Nim Compiler v2.0.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI536871083 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI671088644 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI671088643 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI536871086 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI536871154 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI536871129 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI872415315 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI536871089 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI536871032 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI536871029 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI536871028 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI536870926 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687866351 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI687866282 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
NTI687866282.base = NTI33554435;
NTI687866351.base = NTI33554435;
var NNI536870926 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554445, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI536870926.node = NNI536870926;
var NNI536871032 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "start", len: 0, typ: NTI33554445, name: "start", sons: null}, 
{kind: 1, offset: "duration", len: 0, typ: NTI33554445, name: "duration", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554435, name: "data", sons: null}]};
NTI536871032.node = NNI536871032;
NTI536871029.base = NTI536871032;
var NNI536871028 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "notes", len: 0, typ: NTI536871029, name: "notes", sons: null}, 
{kind: 1, offset: "duration", len: 0, typ: NTI33554445, name: "duration", sons: null}]};
NTI536871028.node = NNI536871028;
var NNI872415315 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554445, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554445, name: "Field1", sons: null}]};
NTI872415315.node = NNI872415315;
NTI536871089.base = NTI872415315;
NTI536871129.base = NTI33554466;
var NNI671088644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI671088644.node = NNI671088644;
NTI671088643.base = NTI671088644;
var NNI536871086 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554435, name: "data", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "gate", len: 0, typ: NTI671088643, name: "gate", sons: null}]};
NTI536871086.node = NNI536871086;
NTI536871154.base = NTI536871086;
NTI536871083.base = NTI536871086;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}
    var sharps_687865887 = new Uint8Array([0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 16]);
    var flats_687865888 = new Uint8Array([0, 2, 3, 5, 6, 7, 9, 10, 12, 13, 15, 16]);

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
import { el } from "@elemaudio/core" 

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function midiOffsets_687866412(scale_687866413) {
    var Temporary1;

  var result_687866414 = [];

    switch (scale_687866413) {
    case 0:
      Temporary1 = [0, 2, 4, 5, 7, 9, 11];
      break;
    case 1:
      Temporary1 = [0, 2, 3, 5, 7, 8, 10];
      break;
    case 2:
      Temporary1 = [0, 2, 3, 5, 7, 8, 11];
      break;
    case 3:
      Temporary1 = [0, 2, 4, 7, 9];
      break;
    case 4:
      Temporary1 = [0, 3, 5, 7, 10];
      break;
    case 5:
      Temporary1 = [0, 3, 5, 6, 7, 10];
      break;
    }
    result_687866414 = nimCopy(null, Temporary1, NTI687866282);

  return result_687866414;

}

function scale_687866487(baseNoteMidi_687866488, scale_687866489) {
  var result_687866490 = [];

    var offsets_687866491 = midiOffsets_687866412(scale_687866489);
    {
      var j_687866496 = 0;
      var i_536871687 = 0;
      {
          Label3: while (true) {
          if (!(i_536871687 < 3)) break Label3;
            j_687866496 = i_536871687;
            {
              var i_687866500 = 0;
              var i_536871684 = 0;
              var L_536871685 = (offsets_687866491).length;
              {
                  Label6: while (true) {
                  if (!(i_536871684 < L_536871685)) break Label6;
                    i_687866500 = offsets_687866491[i_536871684];
                    result_687866490.push(((i_687866500 + baseNoteMidi_687866488) + (j_687866496 * 12)));;
                    i_536871684 += 1;
                  }
              };
            };
            i_536871687 += 1;
          }
      };
    };

  return result_687866490;

}

function find_687865889(a_687865892, item_687865893) {
  var result_687865894 = 0;

  BeforeRet: {
    result_687865894 = 0;
    {
      var i_687865937 = 0;
      var i_536871691 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            i_687865937 = a_687865892[i_536871691];
            if ((i_687865937 == item_687865893)) {
            break BeforeRet;
            }
            
            result_687865894 += 1;
            if ((11 <= i_536871691)) {
            break Label2;
            }
            
            i_536871691 += 1;
          }
      };
    };
    result_687865894 = (-1);
  };

  return result_687865894;

}

function toMidi_687865884(note_687865885) {
  var result_687865886 = 0;

    var toneIndex_687865980 = find_687865889(sharps_687865887, note_687865885.Field0);
    if ((toneIndex_687865980 == (-1))) {
    toneIndex_687865980 = find_687865889(flats_687865888, note_687865885.Field0);
    }
    
    result_687865886 = (((note_687865885.Field1 + 1) * 12) + toneIndex_687865980);

  return result_687865886;

}

function scale_687866505(baseNote_687866506, scaleType_687866507) {
  var result_687866508 = [];

    result_687866508 = nimCopy(null, scale_687866487(toMidi_687865884(baseNote_687866506), scaleType_687866507), NTI687866351);

  return result_687866508;

}

function note_536870918(duration_536870919, scaleIndex_536870920) {
  var result_536870924 = {Field0: 0.0, Field1: 0};

    var colontmp__536871693 = duration_536870919;
    var colontmp__536871694 = s_536870916[(scaleIndex_536870920 - 1)];
    result_536870924 = nimCopy(result_536870924, {Field0: colontmp__536871693, Field1: colontmp__536871694}, NTI536870926);

  return result_536870924;

}

function brk_536870947(duration_536870948) {
  var result_536870950 = {Field0: 0.0, Field1: 0};

    var colontmp__536871695 = duration_536870948;
    var colontmp__536871696 = bassNull_536870917;
    result_536870950 = nimCopy(result_536870950, {Field0: colontmp__536871695, Field1: colontmp__536871696}, NTI536870926);

  return result_536870950;

}

function sharp_536870942(n_536870944) {
  var result_536870946 = {Field0: 0.0, Field1: 0};

    var colontmp__536871697 = n_536870944["Field0"];
    var colontmp__536871698 = (n_536870944["Field1"] + 1);
    result_536870946 = nimCopy(result_536870946, {Field0: colontmp__536871697, Field1: colontmp__536871698}, NTI536870926);

  return result_536870946;

}

function HEX26_536870966(x_536870968, y_536870969) {
  var result_536870970 = [];

    result_536870970 = new Array(((x_536870968).length + (y_536870969).length)); for (var i = 0 ; i < ((x_536870968).length + (y_536870969).length) ; ++i) { result_536870970[i] = {Field0: 0.0, Field1: 0}; }    {
      var i_536870989 = 0;
      var colontmp__536871700 = 0;
      colontmp__536871700 = ((x_536870968).length - 1);
      var res_536871702 = 0;
      {
          Label3: while (true) {
          if (!(res_536871702 <= colontmp__536871700)) break Label3;
            i_536870989 = res_536871702;
            result_536870970[i_536870989] = nimCopy(result_536870970[i_536870989], x_536870968[i_536870989], NTI536870926);
            res_536871702 += 1;
          }
      };
    };
    {
      var i_536870997 = 0;
      var colontmp__536871705 = 0;
      colontmp__536871705 = ((y_536870969).length - 1);
      var res_536871706 = 0;
      {
          Label6: while (true) {
          if (!(res_536871706 <= colontmp__536871705)) break Label6;
            i_536870997 = res_536871706;
            result_536870970[(i_536870997 + (x_536870968).length)] = nimCopy(result_536870970[(i_536870997 + (x_536870968).length)], y_536870969[i_536870997], NTI536870926);
            res_536871706 += 1;
          }
      };
    };

  return result_536870970;

}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function timedTrigger_671088791(start_671088792, dur_671088793, key_671088794) {
  var result_671088795 = null;

    var t_671088796 = el.div(el.time(), el.sr());
    var startNode_671088797 = el.const({value: start_671088792, key: toJSStr((key_671088794 || []).concat([95,115,116,97,114,116] || []))});
    var endNode_671088798 = el.const({value: (start_671088792 + dur_671088793), key: toJSStr((key_671088794 || []).concat([95,101,110,100] || []))});
    result_671088795 = el.mul(el.ge(t_671088796, startNode_671088797), el.le(t_671088796, endNode_671088798));

  return result_671088795;

}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = (old_301990096 + n_301990095), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    {
      var iHEX60gensym4_301990110 = 0;
      var i_536871726 = 0;
      {
          Label4: while (true) {
          if (!(i_536871726 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_536871726;
            result_301990092[result_301990092_Idx][(old_301990096 + iHEX60gensym4_301990110)] = x_301990093.charCodeAt((start_301990094 + iHEX60gensym4_301990110));
            i_536871726 += 1;
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990129(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function createSequencer_536871112(s_536871114, initData_536871115, trackCount_536871116, bpm_536871117, repetitions_536871118, startTime_536871119, seqKey_536871120, debug_536871121) {
  var result_536871139 = ({sequence: ({notes: [], duration: 0.0}), initData: 0, trackCount: 0, bpm: 0.0, repetitions: 0, startTime: 0.0, seqKey: [], debug: false, secPerBeat: 0.0, seqDuration: 0.0, noteIntervals: [], tracks: [], playingNotes: [], currentTrackIdx: 0});

    result_536871139.sequence = nimCopy(result_536871139.sequence, s_536871114, NTI536871028);
    result_536871139.initData = initData_536871115;
    result_536871139.trackCount = trackCount_536871116;
    result_536871139.bpm = bpm_536871117;
    result_536871139.repetitions = repetitions_536871118;
    result_536871139.startTime = startTime_536871119;
    result_536871139.seqKey = nimCopy(null, seqKey_536871120, NTI33554449);
    result_536871139.debug = debug_536871121;
    var secPerBeat_536871140 = (60.0 / bpm_536871117);
    result_536871139.secPerBeat = secPerBeat_536871140;
    var seqDuration_536871141 = (s_536871114.duration * secPerBeat_536871140);
    result_536871139.seqDuration = seqDuration_536871141;
    var noteIntervals_536871146 = [];
    {
      var i_536871188 = 0;
      var note_536871189 = ({start: 0.0, duration: 0.0, data: 0});
      var i_536871710 = 0;
      var L_536871711 = (s_536871114.notes).length;
      {
          Label3: while (true) {
          if (!(i_536871710 < L_536871711)) break Label3;
            i_536871188 = i_536871710;
            note_536871189 = nimCopy(note_536871189, s_536871114.notes[i_536871710], NTI536871032);
            var start_536871190 = ((note_536871189.start * secPerBeat_536871140) - seqDuration_536871141);
            var finish_536871191 = (start_536871190 + (note_536871189.duration * secPerBeat_536871140));
            if ((0.0 < finish_536871191)) {
            noteIntervals_536871146.push({Field0: start_536871190, Field1: finish_536871191});;
            }
            
            i_536871710 += 1;
          }
      };
    };
    var playingNotes_536871200 = [];
    {
      var i_536871206 = 0;
      var note_536871207 = ({start: 0.0, duration: 0.0, data: 0});
      var i_536871714 = 0;
      var L_536871715 = (s_536871114.notes).length;
      {
          Label6: while (true) {
          if (!(i_536871714 < L_536871715)) break Label6;
            i_536871206 = i_536871714;
            note_536871207 = nimCopy(note_536871207, s_536871114.notes[i_536871714], NTI536871032);
            var start_536871208 = (note_536871207.start * secPerBeat_536871140);
            var finish_536871209 = (start_536871208 + (note_536871207.duration * secPerBeat_536871140));
            noteIntervals_536871146.push({Field0: start_536871208, Field1: finish_536871209});;
            playingNotes_536871200.push(false);;
            i_536871714 += 1;
          }
      };
    };
    result_536871139.noteIntervals = nimCopy(null, noteIntervals_536871146, NTI536871089);
    result_536871139.playingNotes = nimCopy(null, playingNotes_536871200, NTI536871129);
    var tracks_536871223 = [];
    {
      var i_536871228 = 0;
      var i_536871718 = 0;
      {
          Label9: while (true) {
          if (!(i_536871718 < trackCount_536871116)) break Label9;
            i_536871228 = i_536871718;
            tracks_536871223.push({data: initData_536871115, idx: i_536871228, gate: timedTrigger_671088791(0.0, 0.0, (seqKey_536871120 || []).concat(HEX24_369098760(i_536871228) || []))});;
            i_536871718 += 1;
          }
      };
    };
    result_536871139.tracks = nimCopy(null, tracks_536871223, NTI536871154);

  return result_536871139;

}

function HEX2BHEX3D_536871069(x_536871071, x_536871071_Idx, y_536871072) {
    x_536871071[x_536871071_Idx] = (x_536871071[x_536871071_Idx] + y_536871072);

  
}

function toSequence_536871033(melody_536871035, null_536871036) {
  var result_536871042 = ({notes: [], duration: 0.0});

    {
      var note_536871062 = {Field0: 0.0, Field1: 0};
      var i_536871730 = 0;
      var L_536871731 = (melody_536871035).length;
      {
          Label3: while (true) {
          if (!(i_536871730 < L_536871731)) break Label3;
            note_536871062 = melody_536871035[i_536871730];
            if (!((note_536871062.Field1 == null_536871036))) {
            var n_536871064 = {start: result_536871042.duration, duration: note_536871062.Field0, data: note_536871062.Field1};
            var Temporary4 = nimCopy(null, n_536871064, NTI536871032);
            result_536871042.notes.push(Temporary4);;
            }
            
            HEX2BHEX3D_536871069(result_536871042, "duration", note_536871062.Field0);
            i_536871730 += 1;
          }
      };
    };

  return result_536871042;

}

function toInt_33556014(f_33556015) {
    var Temporary1;

  var result_33556016 = 0;

    if ((0.0 <= f_33556015)) {
    Temporary1 = (((f_33556015 + 0.5)) | 0);
    }
    else {
    Temporary1 = (((f_33556015 - 0.5)) | 0);
    }
    
    result_33556016 = Temporary1;

  return result_33556016;

}

function getNextTrackIdx_536871450(s_536871452) {
  var result_536871453 = 0;

    result_536871453 = s_536871452.currentTrackIdx;
    s_536871452.currentTrackIdx = Math.trunc((s_536871452.currentTrackIdx + 1) % s_536871452.trackCount);

  return result_536871453;

}

function addQuoted_536871548(s_536871550, s_536871550_Idx, x_536871551) {
    addInt_301990129(s_536871550, s_536871550_Idx, x_536871551);

  
}

function collectionToString_536871533(x_536871535, prefix_536871536, separator_536871537, suffix_536871538) {
  var result_536871539 = [[]];

    result_536871539[0] = nimCopy(null, prefix_536871536, NTI33554449);
    var firstElement_536871540 = true;
    {
      var value_536871544 = 0;
      var i_536871749 = 0;
      var L_536871750 = (x_536871535).length;
      {
          Label3: while (true) {
          if (!(i_536871749 < L_536871750)) break Label3;
            value_536871544 = x_536871535[i_536871749];
            if (firstElement_536871540) {
            firstElement_536871540 = false;
            }
            else {
            result_536871539[0].push.apply(result_536871539[0], separator_536871537);;
            }
            
            addQuoted_536871548(result_536871539, 0, value_536871544);
            i_536871749 += 1;
          }
      };
    };
    result_536871539[0].push.apply(result_536871539[0], suffix_536871538);;

  return result_536871539[0];

}

function HEX24_536871529(x_536871531) {
  var result_536871532 = [];

    result_536871532 = nimCopy(null, collectionToString_536871533(x_536871531, [64,91], [44,32], [93]), NTI33554449);

  return result_536871532;

}

function currentNotes_536871377(s_536871379, currentTime_536871380) {
  var result_536871381 = [];

    var currentLoop_536871382 = Math.floor(((currentTime_536871380 - s_536871379.startTime) / s_536871379.seqDuration));
    if (((s_536871379.repetitions == 0) || (toInt_33556014(currentLoop_536871382) < s_536871379.repetitions))) {
    var seqTime_536871383 = (currentTime_536871380 - (currentLoop_536871382 * s_536871379.seqDuration));
    {
      var i_536871424 = 0;
      var n_536871425 = {Field0: 0.0, Field1: 0.0};
      var i_536871740 = 0;
      var L_536871741 = (s_536871379.noteIntervals).length;
      {
          Label3: while (true) {
          if (!(i_536871740 < L_536871741)) break Label3;
            i_536871424 = i_536871740;
            n_536871425 = nimCopy(n_536871425, s_536871379.noteIntervals[i_536871740], NTI872415315);
            if ((((n_536871425.Field0 - 0.1) <= seqTime_536871383) && (seqTime_536871383 < n_536871425.Field1))) {
            if (!(s_536871379.playingNotes[i_536871424])) {
            var note_536871426 = nimCopy(null, s_536871379.sequence.notes[i_536871424], NTI536871032);
            var start_536871427 = (n_536871425.Field0 + (currentLoop_536871382 * s_536871379.seqDuration));
            var nextTrackIdx_536871454 = getNextTrackIdx_536871450(s_536871379);
            s_536871379.tracks[nextTrackIdx_536871454].data = note_536871426.data;
            s_536871379.tracks[nextTrackIdx_536871454].gate = timedTrigger_671088791(start_536871427, (note_536871426.duration * s_536871379.secPerBeat), (s_536871379.seqKey || []).concat(HEX24_369098760(nextTrackIdx_536871454) || []));
            s_536871379.playingNotes[i_536871424] = true;
            }
            
            }
            else {
              if (s_536871379.playingNotes[i_536871424]) {
              s_536871379.playingNotes[i_536871424] = false;
              }
              
            }
            
            i_536871740 += 1;
          }
      };
    };
    if (s_536871379.debug) {
    var playing_536871459 = [];
    {
      var i_536871499 = 0;
      var v_536871500 = false;
      var i_536871745 = 0;
      var L_536871746 = (s_536871379.playingNotes).length;
      {
          Label6: while (true) {
          if (!(i_536871745 < L_536871746)) break Label6;
            i_536871499 = i_536871745;
            v_536871500 = s_536871379.playingNotes[i_536871745];
            if (v_536871500) {
            playing_536871459.push(i_536871499);;
            }
            
            i_536871745 += 1;
          }
      };
    };
    rawEcho(s_536871379.seqKey, [32], HEX24_369098760(s_536871379.currentTrackIdx), [32], HEX24_536871529(playing_536871459));
    }
    
    }
    
    result_536871381 = nimCopy(null, s_536871379.tracks, NTI536871083);

  return result_536871381;

}

function toFrequency_687865986(midi_687865987) {
  var result_687865988 = 0.0;

    result_687865988 = (Math.pow(2.0, ((midi_687865987 - 69) / 12.0)) * 440.0);

  return result_687865988;

}

function lowpass_671088775(sig_671088776, fq_671088777, q_671088778) {
  var result_671088779 = null;

    return el.lowpass(fq_671088777, q_671088778, sig_671088776)

  return result_671088779;

}

function HEX2BHEX3D_671088685(a_671088686, a_671088686_Idx, b_671088687) {
    a_671088686[a_671088686_Idx] = el.add(a_671088686[a_671088686_Idx], b_671088687);

  
}

function play_536871352(time_536871353) {
  var result_536871354 = null;

    var bassNotes_536871569 = currentNotes_536871377(bassSeq_536871350[0], time_536871353);
    var bassSound_536871570 = [el.const({value: 0.0, key: "bass"})];
    var bassGain_536871571 = [el.const({value: 0.0, key: "bass_gain"})];
    {
      var n_536871592 = ({data: 0, idx: 0, gate: null});
      var i_536871735 = 0;
      var L_536871736 = (bassNotes_536871569).length;
      {
          Label3: while (true) {
          if (!(i_536871735 < L_536871736)) break Label3;
            n_536871592 = bassNotes_536871569[i_536871735];
            var fq_536871593 = el.const({value: toFrequency_687865986(n_536871592.data), key: toJSStr(([98] || []).concat(HEX24_369098760(n_536871592.idx) || []))});
            var amount_536871594 = el.mul(fq_536871593, 2.41);
            var fq2_536871595 = el.add(fq_536871593, el.mul(el.saw(el.add(fq_536871593, el.mul(el.mul(el.cycle(0.3), fq_536871593), 0.01))), amount_536871594));
            var sound_536871596 = lowpass_671088775(el.triangle(el.mul(fq2_536871595, 0.5)), el.mul(fq_536871593, 2.5), el.const({value: 2.0}));
            var env_536871597 = el.adsr(el.const({value: 0.3}), el.const({value: 0.3}), el.const({value: 0.6}), el.const({value: release_536871027}), n_536871592.gate);
            HEX2BHEX3D_671088685(bassSound_536871570, 0, el.mul(sound_536871596, env_536871597));
            HEX2BHEX3D_671088685(bassGain_536871571, 0, env_536871597);
            i_536871735 += 1;
          }
      };
    };
    var bass_536871598 = el.div(bassSound_536871570[0], bassGain_536871571[0]);
    var noise1_536871599 = lowpass_671088775(el.mul(el.mul(el.pinknoise(), el.add(el.cycle(bps_536871351), 3.0)), el.const({value: 0.03})), el.const({value: 8000.0}), el.const({value: 0.6}));
    var bps2_536871600 = (bps_536871351 / 2.0);
    var bps4_536871601 = (bps_536871351 / 4.0);
    var noise2_536871602 = lowpass_671088775(el.mul(el.mul(el.mul(el.mul(el.sub(1.0, el.train(bps2_536871600)), el.noise()), 0.07), el.sub(1.0, el.pow(el.phasor(bps2_536871600), 0.3))), el.add(1.0, el.mul(-0.3, el.cycle(bps4_536871601)))), el.mul(el.mul(el.sub(1.0, el.train(bps2_536871600)), el.add(0.2, el.phasor(bps2_536871600))), 10000.0), el.const({value: 0.8}));
    result_536871354 = el.add(el.add(el.mul(bass_536871598, 0.8), noise1_536871599), noise2_536871602);

  return result_536871354;

}
var s_536870916 = scale_687866505({Field0: 10, Field1: 2}, 1);
var bassNull_536870917 = 0;
var bassA_536870955 = [nimCopy(null, note_536870918(3, 1), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(3, 2), NTI536870926), nimCopy(null, note_536870918(1, 5), NTI536870926), nimCopy(null, note_536870918(3, 1), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(3, 2), NTI536870926), nimCopy(null, note_536870918(1, 5), NTI536870926), nimCopy(null, note_536870918(3, 1), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(3, 5), NTI536870926), nimCopy(null, note_536870918(1, 1), NTI536870926), nimCopy(null, note_536870918(3, 4), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(3, 4), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, sharp_536870942(note_536870918(3, 6)), NTI536870926), nimCopy(null, note_536870918(1, 2), NTI536870926), nimCopy(null, note_536870918(3, 4), NTI536870926), nimCopy(null, note_536870918(1, 7), NTI536870926), nimCopy(null, note_536870918(3, 3), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(3, 2), NTI536870926), nimCopy(null, note_536870918(1, 5), NTI536870926), nimCopy(null, note_536870918(2, 1), NTI536870926), nimCopy(null, sharp_536870942(note_536870918(2, 3)), NTI536870926), nimCopy(null, note_536870918(3, 2), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926)];
var bassB_536870960 = [nimCopy(null, note_536870918(3, 5), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(2, 1), NTI536870926), nimCopy(null, sharp_536870942(note_536870918(2, 3)), NTI536870926), nimCopy(null, note_536870918(3, 4), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(3, 4), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(3, 4), NTI536870926), nimCopy(null, sharp_536870942(note_536870918(1, 1)), NTI536870926), nimCopy(null, note_536870918(3, 7), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(3, 3), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(3, 2), NTI536870926), nimCopy(null, note_536870918(1, 5), NTI536870926)];
var bassA2_536870965 = [nimCopy(null, note_536870918(3, 1), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(3, 2), NTI536870926), nimCopy(null, note_536870918(1, 5), NTI536870926), nimCopy(null, note_536870918(3, 1), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(3, 2), NTI536870926), nimCopy(null, note_536870918(1, 5), NTI536870926), nimCopy(null, note_536870918(3, 1), NTI536870926), nimCopy(null, sharp_536870942(note_536870918(1, 6)), NTI536870926), nimCopy(null, note_536870918(3, 6), NTI536870926), nimCopy(null, note_536870918(1, 5), NTI536870926), nimCopy(null, note_536870918(3, 1), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926), nimCopy(null, note_536870918(3, 2), NTI536870926), nimCopy(null, brk_536870947(1.0), NTI536870926)];
var bassSong_536871025 = HEX26_536870966(HEX26_536870966(HEX26_536870966(bassA_536870955, bassA_536870955), bassB_536870960), bassA2_536870965);
var bpm_536871026 = 105.0;
var release_536871027 = 2.5;
var bassSeq_536871350 = [createSequencer_536871112(toSequence_536871033(bassSong_536871025, bassNull_536870917), bassNull_536870917, 2, bpm_536871026, 0, 0.0, [98,97,115,115], false)];
var bps_536871351 = (bpm_536871026 / 60.0);
export {play_536871352 as play}
