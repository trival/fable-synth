/* Generated by the Nim Compiler v2.0.4 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI687866339 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI687866270 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
NTI687866270.base = NTI33554435;
NTI687866339.base = NTI33554435;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}
    var sharps_687865887 = new Uint8Array([0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 16]);
    var flats_687865888 = new Uint8Array([0, 2, 3, 5, 6, 7, 9, 10, 12, 13, 15, 16]);
import { el } from "@elemaudio/core" 

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function midiOffsets_687866400(scale_687866401) {
    var Temporary1;

  var result_687866402 = [];

    switch (scale_687866401) {
    case 0:
      Temporary1 = [0, 2, 4, 5, 7, 9, 11];
      break;
    case 1:
      Temporary1 = [0, 2, 3, 5, 7, 8, 10];
      break;
    case 2:
      Temporary1 = [0, 2, 3, 5, 7, 8, 11];
      break;
    case 3:
      Temporary1 = [0, 2, 4, 7, 9];
      break;
    case 4:
      Temporary1 = [0, 3, 5, 7, 10];
      break;
    case 5:
      Temporary1 = [0, 3, 5, 6, 7, 10];
      break;
    }
    result_687866402 = nimCopy(null, Temporary1, NTI687866270);

  return result_687866402;

}

function scale_687866475(baseNoteMidi_687866476, scale_687866477) {
  var result_687866478 = [];

    var offsets_687866479 = midiOffsets_687866400(scale_687866477);
    Label1: {
      var j_687866484 = 0;
      var i_536870960 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536870960 < 3)) break Label3;
            j_687866484 = i_536870960;
            Label4: {
              var i_687866488 = 0;
              var i_536870957 = 0;
              var L_536870958 = (offsets_687866479).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536870957 < L_536870958)) break Label6;
                    i_687866488 = offsets_687866479[i_536870957];
                    result_687866478.push(((i_687866488 + baseNoteMidi_687866476) + (j_687866484 * 12)));;
                    i_536870957 += 1;
                  }
              };
            };
            i_536870960 += 1;
          }
      };
    };

  return result_687866478;

}

function find_687865889(a_687865892, item_687865893) {
  var result_687865894 = 0;

  BeforeRet: {
    result_687865894 = 0;
    Label1: {
      var i_687865937 = 0;
      var i_536870964 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            i_687865937 = a_687865892[i_536870964];
            if ((i_687865937 == item_687865893)) {
            break BeforeRet;
            }
            
            result_687865894 += 1;
            if ((11 <= i_536870964)) {
            break Label2;
            }
            
            i_536870964 += 1;
          }
      };
    };
    result_687865894 = (-1);
  };

  return result_687865894;

}

function toMidi_687865884(note_687865885) {
  var result_687865886 = 0;

    var toneIndex_687865980 = find_687865889(sharps_687865887, note_687865885.Field0);
    if ((toneIndex_687865980 == (-1))) {
    toneIndex_687865980 = find_687865889(flats_687865888, note_687865885.Field0);
    }
    
    result_687865886 = (((note_687865885.Field1 + 1) * 12) + toneIndex_687865980);

  return result_687865886;

}

function scale_687866493(baseNote_687866494, scaleType_687866495) {
  var result_687866496 = [];

    result_687866496 = nimCopy(null, scale_687866475(toMidi_687865884(baseNote_687866494), scaleType_687866495), NTI687866339);

  return result_687866496;

}

function play_536870951(time_536870952) {
  var result_536870953 = null;

    result_536870953 = el.cycle(440.0);

  return result_536870953;

}
var s_536870916 = scale_687866493({Field0: 7, Field1: 2}, 0);
var bassNull_536870917 = 0;
export {play_536870951 as play}
