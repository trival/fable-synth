/* Generated by the Nim Compiler v2.0.4 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}
import { el } from "@elemaudio/core" 

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function nimFloatToString_385876129(a_385876130) {
  var result_385876131 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876130))
      result_385876131 = a_385876130 === 0 && 1 / a_385876130 < 0 ? "-0.0" : a_385876130+".0"
    else {
      result_385876131 = a_385876130+""
      if(nimOnlyDigitsOrMinus(result_385876131)){
        result_385876131 = a_385876130+".0"
      }
    }
  

  return result_385876131;

}

function addFloat_33557563(result_33557565, result_33557565_Idx, x_33557566) {
    add_33556373(result_33557565, result_33557565_Idx, nimFloatToString_385876129(x_33557566));

  
}

function addQuoted_536871088(s_536871090, s_536871090_Idx, x_536871091) {
    addFloat_33557563(s_536871090, s_536871090_Idx, x_536871091);

  
}

function collectionToString_536871050(x_536871052, prefix_536871053, separator_536871054, suffix_536871055) {
  var result_536871056 = [[]];

    result_536871056[0] = nimCopy(null, prefix_536871053, NTI33554449);
    var firstElement_536871057 = true;
    Label1: {
      var value_536871084 = 0.0;
      var i_536871144 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            value_536871084 = x_536871052[i_536871144];
            if (firstElement_536871057) {
            firstElement_536871057 = false;
            }
            else {
            result_536871056[0].push.apply(result_536871056[0], separator_536871054);;
            }
            
            addQuoted_536871088(result_536871056, 0, value_536871084);
            if ((4 <= i_536871144)) {
            break Label2;
            }
            
            i_536871144 += 1;
          }
      };
    };
    result_536871056[0].push.apply(result_536871056[0], suffix_536871055);;

  return result_536871056[0];

}

function HEX24_536871045(x_536871048) {
  var result_536871049 = [];

    result_536871049 = nimCopy(null, collectionToString_536871050(x_536871048, [91], [44,32], [93]), NTI33554449);

  return result_536871049;

}

function HEX2BHEX3D_536871106(x_536871108, x_536871108_Idx, y_536871109) {
    x_536871108[x_536871108_Idx] = (x_536871108[x_536871108_Idx] + y_536871109);

  
}

function toInt_33556014(f_33556015) {
    var Temporary1;

  var result_33556016 = 0;

    if ((0.0 <= f_33556015)) {
    Temporary1 = (((f_33556015 + 0.5)) | 0);
    }
    else {
    Temporary1 = (((f_33556015 - 0.5)) | 0);
    }
    
    result_33556016 = Temporary1;

  return result_33556016;

}

function toFrequency_687865986(midi_687865987) {
  var result_687865988 = 0.0;

    result_687865988 = (Math.pow(2.0, ((midi_687865987 - 69) / 12.0)) * 440.0);

  return result_687865988;

}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = (old_301990096 + n_301990095), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_536871150 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_536871150 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_536871150;
            result_301990092[result_301990092_Idx][(old_301990096 + iHEX60gensym4_301990110)] = x_301990093.charCodeAt((start_301990094 + iHEX60gensym4_301990110));
            i_536871150 += 1;
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990129(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function HEX24_33557559(x_33557561) {
  var result_33557562 = [[]];

    addFloat_33557563(result_33557562, 0, x_33557561);

  return result_33557562[0];

}

function HEX40_671088648(val_671088649, key_671088650) {
  var result_671088651 = null;

    result_671088651 = el.const({value: val_671088649, key: toJSStr(key_671088650)});

  return result_671088651;

}

function env_536870929(decay_536870930, gate_536870931) {
  var result_536870932 = null;

    var d_536870933 = el.const({value: decay_536870930});
    result_536870932 = el.adsr(el.const({value: 0.01}), d_536870933, el.const({value: 0.0}), d_536870933, gate_536870931);

  return result_536870932;

}

function timpani_536870934(baseFq_536870935, gate_536870936) {
  var result_536870937 = null;

    var fq1_536870938 = el.mul(baseFq_536870935, fqFactor1_536870915);
    var fq2_536870939 = el.mul(baseFq_536870935, fqFactor2_536870916);
    var fq3_536870940 = el.mul(baseFq_536870935, fqFactor3_536870917);
    var fq4_536870941 = el.mul(baseFq_536870935, fqFactor4_536870918);
    var env1_536870942 = env_536870929(decay1_536870923, gate_536870936);
    var env2_536870943 = env_536870929(decay2_536870924, gate_536870936);
    var env3_536870944 = env_536870929(decay3_536870925, gate_536870936);
    var env4_536870945 = env_536870929(decay4_536870926, gate_536870936);
    var sig1_536870946 = el.mul(el.mul(el.cycle(fq1_536870938), env1_536870942), amp1_536870919);
    var sig2_536870947 = el.mul(el.mul(el.cycle(fq2_536870939), env2_536870943), amp2_536870920);
    var sig3_536870948 = el.mul(el.mul(el.cycle(fq3_536870940), env3_536870944), amp3_536870921);
    var sig4_536870949 = el.mul(el.mul(el.cycle(fq4_536870941), env4_536870945), amp4_536870922);
    var envNoise_536870950 = env_536870929(decayNoise_536870928, gate_536870936);
    var noiseSig_536870951 = el.mul(el.mul(el.noise(), envNoise_536870950), ampNoise_536870927);
    result_536870937 = el.add(el.add(el.add(el.add(sig1_536870946, sig2_536870947), sig3_536870948), sig4_536870949), noiseSig_536870951);

  return result_536870937;

}

function HEX2BHEX3D_671088705(a_671088706, a_671088706_Idx, b_671088707) {
    a_671088706[a_671088706_Idx] = el.add(a_671088706[a_671088706_Idx], b_671088707);

  
}

function play_536870953(midiNotes_536870954) {
  var result_536870955 = [null];

    rawEcho(HEX24_536871045(midiNotes_536870954));
    result_536870955[0] = el.const({value: 0.0});
    var playing_536871098 = [0.0];
    Label1: {
      var i_536871103 = 0;
      var res_536871138 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871138 <= 4)) break Label3;
            i_536871103 = res_536871138;
            var note_536871104 = midiNotes_536870954[i_536871103];
            var gate_536871105 = 0.0;
            if ((0.0 < note_536871104)) {
            gate_536871105 = 1.0;
            HEX2BHEX3D_536871106(playing_536871098, 0, 1.0);
            lastNote_536870952[0][i_536871103] = toInt_33556014(note_536871104);
            }
            
            var fq_536871110 = toFrequency_687865986(lastNote_536870952[0][i_536871103]);
            rawEcho(HEX24_369098760(i_536871103), [32], HEX24_33557559(fq_536871110));
            var fqNode_536871117 = HEX40_671088648(fq_536871110, ([102,113] || []).concat(HEX24_369098760(i_536871103) || []));
            var gateNode_536871118 = HEX40_671088648(gate_536871105, ([103,97,116,101] || []).concat(HEX24_369098760(i_536871103) || []));
            var sig_536871119 = timpani_536870934(fqNode_536871117, gateNode_536871118);
            HEX2BHEX3D_671088705(result_536870955, 0, sig_536871119);
            res_536871138 += 1;
          }
      };
    };
    if ((0.0 < playing_536871098[0])) {
    result_536870955[0] = el.div(result_536870955[0], playing_536871098[0]);
    }
    

  return result_536870955[0];

}
var fqFactor1_536870915 = 1.0;
var fqFactor2_536870916 = 1.5;
var fqFactor3_536870917 = 1.98;
var fqFactor4_536870918 = 2.44;
var amp1_536870919 = 1.0;
var amp2_536870920 = 0.8;
var amp3_536870921 = 0.6;
var amp4_536870922 = 0.2;
var decay1_536870923 = 4.5;
var decay2_536870924 = 7.5;
var decay3_536870925 = 9.0;
var decay4_536870926 = 8.5;
var ampNoise_536870927 = 0.1;
var decayNoise_536870928 = 2.0;
var lastNote_536870952 = [new Int32Array([0, 0, 0, 0, 0])];
export {play_536870953 as play}
